cmake_minimum_required(VERSION 3.10)

set(TestsExecutable GameOfLifeTests)

set(Sources
    GameOfLifeTests.cpp
)

# Below are the instruction for building GoogleTest for the unit
# tests, as per the instruction on the googletest GitHub project.
configure_file(CMakeLists.txt.in googletest-download/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
if(result)
  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
endif()
execute_process(COMMAND ${CMAKE_COMMAND} --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
if(result)
  message(FATAL_ERROR "Build step for googletest failed: ${result}")
endif()

# Add googletest directly to our build. This defines
# the gtest and gtest_main targets.
add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/googletest-src
                 ${CMAKE_CURRENT_BINARY_DIR}/googletest-build
                 EXCLUDE_FROM_ALL)

# Now link against gtest or gtest_main as needed.
add_executable(${TestsExecutable} ${Sources})
target_link_libraries(${CMAKE_PROJECT_NAME} gtest_main)
add_test(NAME ${TestsExecutable} COMMAND ${CMAKE_PROJECT_NAME})